# Generated by Django 3.0.2 on 2020-02-14 12:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields
import sample_database.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('last_modified', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.FileField(blank=True, upload_to=sample_database.models.get_upload_path)),
                ('raw_data', models.FileField(blank=True, upload_to=sample_database.models.get_upload_path)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('vector_file', models.FileField(blank=True, upload_to='diamond_base/design')),
                ('image_file', models.FileField(blank=True, upload_to='diamond_base/design')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Design_Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLS')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Param',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=5000)),
                ('param_type', django_enumfield.db.fields.EnumField(default=2, enum=sample_database.models.ParamType)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('default_value', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLS')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLs')),
                ('name', models.CharField(max_length=50)),
                ('last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('last_modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sample_edited', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sample_database.Location')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='sample_database.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Substrate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='General',
            fields=[
                ('data_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sample_database.Data')),
                ('xmin', models.FloatField(blank=True)),
                ('xmax', models.FloatField(blank=True)),
                ('ymin', models.FloatField(blank=True)),
                ('ymax', models.FloatField(blank=True)),
            ],
            options={
                'verbose_name': 'General Data',
                'verbose_name_plural': 'General Data',
            },
            bases=('sample_database.data',),
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('data_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sample_database.Data')),
                ('x', models.FloatField()),
                ('y', models.FloatField()),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.General')),
            ],
            options={
                'verbose_name': 'Local Data',
                'verbose_name_plural': 'Local Data',
            },
            bases=('sample_database.data',),
        ),
        migrations.CreateModel(
            name='SampleMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='diamond_base/SampleMap')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Sample')),
            ],
        ),
        migrations.AddField(
            model_name='sample',
            name='substrate',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sample_database.Substrate'),
        ),
        migrations.CreateModel(
            name='Piece',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLs')),
                ('name', models.CharField(max_length=50)),
                ('gone', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('design', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sample_database.Design')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sample_database.Piece')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sample_database.Sample')),
            ],
        ),
        migrations.CreateModel(
            name='Param_Value_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Data')),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Param')),
            ],
        ),
        migrations.CreateModel(
            name='Param_Value_Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Action')),
                ('param', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Param')),
            ],
        ),
        migrations.CreateModel(
            name='Design_Object_Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('file', models.FileField(blank=True, upload_to='diamond_base/design/attachments')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('design_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Design_Item')),
            ],
        ),
        migrations.AddField(
            model_name='design',
            name='design_items',
            field=models.ManyToManyField(blank=True, to='sample_database.Design_Item'),
        ),
        migrations.CreateModel(
            name='Data_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLs')),
                ('name', models.CharField(help_text='For example: SEM, Whitelight, Spectrum, Confocal, Resonant Analysis, Map', max_length=50)),
                ('params', models.ManyToManyField(blank=True, db_table='sample_database_data_type_params', to='sample_database.Param')),
            ],
            options={
                'verbose_name': 'Data Type',
            },
        ),
        migrations.AddField(
            model_name='data',
            name='data_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Data_Type'),
        ),
        migrations.CreateModel(
            name='Action_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(help_text='Appears in URLs')),
                ('name', models.CharField(help_text='For example: Create, Experiment, Processing', max_length=50)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('params', models.ManyToManyField(blank=True, db_table='sample_database_action_type_params', to='sample_database.Param')),
            ],
            options={
                'verbose_name': 'Action Type',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='action',
            name='action_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Action_Type'),
        ),
        migrations.AddField(
            model_name='action',
            name='last_modified_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='action_edited', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='action',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='action',
            name='pieces',
            field=models.ManyToManyField(to='sample_database.Piece'),
        ),
        migrations.CreateModel(
            name='Local_Attachment',
            fields=[
                ('data_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sample_database.Data')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Local')),
            ],
            bases=('sample_database.data',),
        ),
        migrations.AddField(
            model_name='general',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sample_database.Action'),
        ),
    ]
